ext {
    libs = libsMap(
            jaxen: 'jaxen:jaxen:1.1.6',
            jdom: 'jdom:jdom:1.1',
            guava: 'com.google.guava:guava:19.0',
            activemq: 'org.apache.activemq:activemq-broker',
            activemq_kahadb: 'org.apache.activemq:activemq-kahadb-store',
            spring: [
                boot: 'org.springframework.boot:spring-boot-starter',
                jms: 'org.springframework:spring-jms',
                aopalliance: 'org.aopalliance:com.springsource.org.aopalliance:1.0.0'
            ],
            test: [
                    junit: 'junit:junit:4.11',
                    assertj: 'org.assertj:assertj-core:1.7.1',
                    spock: 'org.spockframework:spock-core:1.0-groovy-2.4'
            ],
            groovy: 'org.codehaus.groovy:groovy-all:2.4.1',
            gigaspaces: 'com.gigaspaces:gs-openspaces:10.2.0-13800-RELEASE',
            jasperreports: dependencies.create('net.sf.jasperreports:jasperreports:6.2.0') {
                exclude modlue: 'olap4j'
            },
            itext: 'com.lowagie:itext:2.1.7'
    )
}

def libsMap(Map<String, ?> map) {
    def processMap
    processMap = { innerMap ->
        innerMap.each {
            if (it.value instanceof Map) {
                innerMap[it.key] = processMap(it.value)
            }
        }
        innerMap.asImmutable().withDefault {
            throw new InvalidUserDataException(
                    "No entry '$it' in dependency map (candidates: ${innerMap.keySet().sort().join(", ")})" )
        }
    }
    processMap(map)
}
